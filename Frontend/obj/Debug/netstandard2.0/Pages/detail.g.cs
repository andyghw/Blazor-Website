#pragma checksum "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ea6ef34f28ecaf2412dae75ce58bd2c12b697bf"
// <auto-generated/>
#pragma warning disable 1591
namespace Frontend.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using Frontend;
    using Frontend.Models.domain;
    using Frontend.Shared;
    using Newtonsoft.Json;
    using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
    using System.Net;
    using System.IO;
    using Newtonsoft.Json.Linq;
    using Microsoft.AspNetCore.Http;
    using System.Diagnostics;
    using System.Text;
    using System.Net.Http.Headers;
    using Microsoft.AspNetCore.Blazor.RenderTree;
    using Google.Apis.Auth.OAuth2;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/movie/{Title}")]
    public class detail : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
#line 6 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
 if (movie == null)
{

#line default
#line hidden
            builder.AddContent(0, "    ");
            builder.AddMarkupContent(1, "<p><em>Loading...</em></p>\n");
#line 9 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
}
else
{

#line default
#line hidden
            builder.AddContent(2, "    ");
            builder.OpenElement(3, "div");
            builder.AddAttribute(4, "class", "row");
            builder.AddMarkupContent(5, "\n        <div class=\"col-md-2\"></div>\n        ");
            builder.OpenElement(6, "div");
            builder.AddAttribute(7, "class", "col-md-8");
            builder.AddContent(8, "\n            ");
            builder.OpenElement(9, "div");
            builder.AddAttribute(10, "class", "card flex-md-row mb-4 shadow-sm h-md-250");
            builder.AddContent(11, "\n                ");
            builder.OpenElement(12, "div");
            builder.AddAttribute(13, "class", "card-body d-flex flex-column align-items-start");
            builder.AddContent(14, "\n                    ");
            builder.OpenElement(15, "h3");
            builder.AddAttribute(16, "class", "mb-0");
            builder.AddContent(17, "\n                        ");
            builder.OpenElement(18, "a");
            builder.AddAttribute(19, "class", "text-dark");
            builder.AddAttribute(20, "href", "movie/" + (movie.Title));
            builder.AddContent(21, movie.Title);
            builder.CloseElement();
            builder.AddContent(22, "\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(23, "\n                    <br>\n                    ");
            builder.OpenElement(24, "strong");
            builder.AddAttribute(25, "class", "d-inline-block mb-2 text-primary");
            builder.AddContent(26, "IMDB Rating: ");
            builder.AddContent(27, movie.imdbRating);
            builder.CloseElement();
            builder.AddMarkupContent(28, "\n                    Released:<br>\n                    ");
            builder.OpenElement(29, "p");
            builder.AddContent(30, movie.Released);
            builder.CloseElement();
            builder.AddMarkupContent(31, "\n                    Rated:<br>\n                    ");
            builder.OpenElement(32, "p");
            builder.AddContent(33, movie.Rated);
            builder.CloseElement();
            builder.AddMarkupContent(34, "\n                    Genre:<br>\n                    ");
            builder.OpenElement(35, "p");
            builder.AddContent(36, movie.Genre);
            builder.CloseElement();
            builder.AddMarkupContent(37, "\n                    Director:<br>\n                    ");
            builder.OpenElement(38, "p");
            builder.AddContent(39, movie.Director);
            builder.CloseElement();
            builder.AddMarkupContent(40, "\n                    Writer:<br>\n                    ");
            builder.OpenElement(41, "p");
            builder.AddContent(42, movie.Writer);
            builder.CloseElement();
            builder.AddMarkupContent(43, "\n                    Language:<br>\n                    ");
            builder.OpenElement(44, "p");
            builder.AddContent(45, movie.Language);
            builder.CloseElement();
            builder.AddMarkupContent(46, "\n                    Country:<br>\n                    ");
            builder.OpenElement(47, "p");
            builder.AddContent(48, movie.Country);
            builder.CloseElement();
            builder.AddMarkupContent(49, "\n                    Awards:<br>\n                    ");
            builder.OpenElement(50, "p");
            builder.AddContent(51, movie.Awards);
            builder.CloseElement();
            builder.AddMarkupContent(52, "\n                    Type:<br>\n                    ");
            builder.OpenElement(53, "p");
            builder.AddContent(54, movie.Type);
            builder.CloseElement();
            builder.AddMarkupContent(55, "\n                    Actors:<br>\n                    ");
            builder.OpenElement(56, "p");
            builder.AddContent(57, movie.Actors);
            builder.CloseElement();
            builder.AddMarkupContent(58, "\n                    Plot:<br>\n                    ");
            builder.OpenElement(59, "p");
            builder.AddContent(60, movie.Plot);
            builder.CloseElement();
            builder.AddContent(61, "\n                    Website: ");
            builder.OpenElement(62, "a");
            builder.AddAttribute(63, "target", "_blank");
            builder.AddAttribute(64, "href", movie.Website);
            builder.AddContent(65, movie.Website);
            builder.CloseElement();
            builder.AddContent(66, "\n                    ");
            builder.OpenElement(67, "button");
            builder.AddAttribute(68, "class", "btn btn-primary");
            builder.AddAttribute(69, "id", "searchTheaters");
            builder.AddAttribute(70, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(CallJSMethod));
            builder.AddContent(71, "Check nearby theaters");
            builder.CloseElement();
            builder.AddContent(72, "\n                ");
            builder.CloseElement();
            builder.AddContent(73, "\n                ");
            builder.OpenElement(74, "img");
            builder.AddAttribute(75, "class", "card-img-right flex-auto d-none d-lg-block");
            builder.AddAttribute(76, "width", "200");
            builder.AddAttribute(77, "height", "300");
            builder.AddAttribute(78, "src", movie.Poster);
            builder.CloseElement();
            builder.AddContent(79, "\n            ");
            builder.CloseElement();
            builder.AddContent(80, "\n            ");
            builder.AddMarkupContent(81, "<div class=\"row\">\n                <div id=\"map\" class=\"col-md-6\" style=\"height: 400px;\"></div>\n                <div id=\"places\" class=\"col-md-6\"></div>\n            </div>\n            ");
            builder.AddMarkupContent(82, "<div class=\"row\">\n                <div class=\"col-md-6\"></div>\n                <button class=\"btn btn-primary col-md-6\" id=\"more\">More</button>\n            </div>\n        ");
            builder.CloseElement();
            builder.AddContent(83, "\n    ");
            builder.CloseElement();
            builder.AddContent(84, "\n    ");
            builder.OpenElement(85, "div");
            builder.AddAttribute(86, "class", "my-3 p-3 bg-white rounded shadow-sm comments");
            builder.AddContent(87, "\n        ");
            builder.AddMarkupContent(88, "<h6 class=\"border-bottom border-gray pb-2 mb-0\">Comments</h6>\n");
#line 61 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
         foreach (var comment in comments)
        {

#line default
#line hidden
            builder.AddContent(89, "            ");
            builder.OpenElement(90, "div");
            builder.AddAttribute(91, "class", "media text-muted pt-3");
            builder.AddContent(92, "\n                ");
            builder.OpenElement(93, "div");
            builder.AddAttribute(94, "class", "media-body pb-3 mb-0 small lh-125 border-bottom border-gray");
            builder.AddMarkupContent(95, "\n                    <img src=\"http://www.icons101.com/icon_png/size_512/id_29125/tomato.png\" width=\"32\" height=\"32\" alt=\"\" class=\"mr-2 rounded\">\n                    ");
            builder.OpenElement(96, "div");
            builder.AddAttribute(97, "class", "d-flex justify-content-between align-items-center w-100");
            builder.AddContent(98, "\n                        ");
            builder.OpenElement(99, "strong");
            builder.AddAttribute(100, "class", "text-gray-dark");
            builder.AddAttribute(101, "style", "font-size:30px; color:blue");
            builder.AddContent(102, "@");
            builder.AddContent(103, comment.username);
            builder.CloseElement();
            builder.AddContent(104, "\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(105, "\n                    <br>\n                    ");
            builder.OpenElement(106, "span");
            builder.AddAttribute(107, "class", "d-block");
            builder.AddAttribute(108, "style", "font-size:20px; color:black");
            builder.AddContent(109, comment.text);
            builder.CloseElement();
            builder.AddMarkupContent(110, "\'\n                    <br>\n                    ");
            builder.OpenElement(111, "span");
            builder.AddAttribute(112, "class", "d-block");
            builder.AddAttribute(113, "style", "font-size:25px");
            builder.AddContent(114, "Rating: ");
            builder.AddContent(115, comment.rating);
            builder.CloseElement();
            builder.AddMarkupContent(116, "\n                    <br>\n                    ");
            builder.OpenElement(117, "span");
            builder.AddAttribute(118, "class", "d-block");
            builder.AddContent(119, "Date: ");
            builder.AddContent(120, comment.createDate.ToString("d"));
            builder.CloseElement();
            builder.AddContent(121, "\n                ");
            builder.CloseElement();
            builder.AddContent(122, "\n            ");
            builder.CloseElement();
            builder.AddContent(123, "\n");
#line 77 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
        }

#line default
#line hidden
            builder.AddMarkupContent(124, "        <br>\n");
#line 79 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
         if (username != null && !username.Equals(""))
        {

#line default
#line hidden
            builder.AddContent(125, "            ");
            builder.OpenElement(126, "div");
            builder.AddAttribute(127, "class", "col-md-8 order-md-1");
            builder.AddContent(128, "\n                ");
            builder.AddMarkupContent(129, "<h4 class=\"mb-3\">New Comment</h4>\n                ");
            builder.OpenElement(130, "div");
            builder.AddAttribute(131, "class", "row");
            builder.AddContent(132, "\n                    ");
            builder.OpenElement(133, "div");
            builder.AddAttribute(134, "class", "col-md-6 mb-3");
            builder.AddContent(135, "\n                        ");
            builder.AddMarkupContent(136, "<label for=\"username\">Username</label>\n                        ");
            builder.OpenElement(137, "input");
            builder.AddAttribute(138, "type", "text");
            builder.AddAttribute(139, "class", "form-control");
            builder.AddAttribute(140, "id", "username");
            builder.AddAttribute(141, "required", "");
            builder.AddAttribute(142, "readonly", "");
            builder.AddAttribute(143, "value", username);
            builder.CloseElement();
            builder.AddContent(144, "\n                    ");
            builder.CloseElement();
            builder.AddContent(145, "\n                ");
            builder.CloseElement();
            builder.AddContent(146, "\n                ");
            builder.OpenElement(147, "div");
            builder.AddAttribute(148, "class", "row");
            builder.AddContent(149, "\n                    ");
            builder.OpenElement(150, "div");
            builder.AddAttribute(151, "class", "col-md-6 mb-3");
            builder.AddContent(152, "\n                        ");
            builder.AddMarkupContent(153, "<label for=\"moviename\">Moviename</label>\n                        ");
            builder.OpenElement(154, "input");
            builder.AddAttribute(155, "type", "text");
            builder.AddAttribute(156, "class", "form-control");
            builder.AddAttribute(157, "id", "moviename");
            builder.AddAttribute(158, "required", "");
            builder.AddAttribute(159, "readonly", "");
            builder.AddAttribute(160, "value", movie.Title);
            builder.CloseElement();
            builder.AddContent(161, "\n                    ");
            builder.CloseElement();
            builder.AddContent(162, "\n                ");
            builder.CloseElement();
            builder.AddContent(163, "\n                ");
            builder.OpenElement(164, "div");
            builder.AddAttribute(165, "class", "mb-3");
            builder.AddContent(166, "\n                    ");
            builder.AddMarkupContent(167, "<label for=\"Comment\">Comment</label>\n                    ");
            builder.OpenElement(168, "textarea");
            builder.AddAttribute(169, "type", "text");
            builder.AddAttribute(170, "class", "form-control");
            builder.AddAttribute(171, "id", "comment");
            builder.AddAttribute(172, "placeholder", "Leave your comment here.");
            builder.AddAttribute(173, "required", true);
            builder.AddAttribute(174, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(text));
            builder.AddAttribute(175, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => text = __value, text));
            builder.CloseElement();
            builder.AddContent(176, "\n                    ");
            builder.AddMarkupContent(177, "<div class=\"invalid-feedback\">\n                        Please enter comment.\n                    </div>\n                ");
            builder.CloseElement();
            builder.AddContent(178, "\n                ");
            builder.OpenElement(179, "div");
            builder.AddAttribute(180, "class", "col-md-5 mb-3");
            builder.AddContent(181, "\n                    ");
            builder.AddMarkupContent(182, "<label for=\"Rating\">Rating</label>\n                    ");
            builder.OpenElement(183, "select");
            builder.AddAttribute(184, "class", "custom-select d-block w-100");
            builder.AddAttribute(185, "id", "rating");
            builder.AddAttribute(186, "required", true);
            builder.AddAttribute(187, "value", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetValue(rating));
            builder.AddAttribute(188, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.SetValueHandler(__value => rating = __value, rating));
            builder.AddContent(189, "\n                        ");
            builder.AddMarkupContent(190, "<option value=\"\">Choose...</option>\n                        ");
            builder.AddMarkupContent(191, "<option>1</option>\n                        ");
            builder.AddMarkupContent(192, "<option>2</option>\n                        ");
            builder.AddMarkupContent(193, "<option>3</option>\n                        ");
            builder.AddMarkupContent(194, "<option>4</option>\n                        ");
            builder.AddMarkupContent(195, "<option>5</option>\n                    ");
            builder.CloseElement();
            builder.AddContent(196, "\n                    ");
            builder.AddMarkupContent(197, "<div class=\"invalid-feedback\">\n                        Please select a Rating.\n                    </div>\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(198, "\n                <hr class=\"mb-4\">\n                ");
            builder.OpenElement(199, "button");
            builder.AddAttribute(200, "class", "btn btn-primary btn-lg btn-block");
            builder.AddAttribute(201, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(AddComment));
            builder.AddContent(202, "Add Comment");
            builder.CloseElement();
            builder.AddContent(203, "\n            ");
            builder.CloseElement();
            builder.AddContent(204, "\n");
#line 119 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
        }

#line default
#line hidden
            builder.AddContent(205, "    ");
            builder.CloseElement();
            builder.AddContent(206, "\n");
#line 121 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 123 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
           
    [Parameter]
    private string Title { get; set; }
    private Movie movie;
    private List<Comment> comments;
    private string username;
    private Comment comment;
    private string text;
    private string rating;

    protected override async Task OnInitAsync()
    {
        Debug.WriteLine(Title);
        movie = await Http.GetJsonAsync<Movie>("http://www.omdbapi.com/?t=" + Title + "&apikey=1342bb");
        var response = await Http.GetAsync("http://localhost:5000/api/Comments/GetCommentsByM/" + movie.Title);
        var str = await response.Content.ReadAsStringAsync();
        if (str != null)
        {
            comments = Json.Deserialize<List<Comment>>(str);
        }
        username = await localStorage.GetItem<string>("username");
    }

    public async Task AddComment()
    {
        comment = new Comment()
        {
            username = username,
            movieName = movie.Title,
            text = text,
            rating = double.Parse(rating)
        };
        await Http.PostJsonAsync("http://localhost:5000/api/Comments/AddComment", comment);
        UriHelper.NavigateTo("/");
        UriHelper.NavigateTo("/movie/"+movie.Title);
    }

    protected void CallJSMethod()
    {
        JSRuntime.Current.InvokeAsync<bool>("JSMethod");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Blazored.Storage.ILocalStorage localStorage { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

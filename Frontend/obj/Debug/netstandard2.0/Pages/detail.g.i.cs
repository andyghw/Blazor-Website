#pragma checksum "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ea6ef34f28ecaf2412dae75ce58bd2c12b697bf"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Frontend.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using Frontend;
    using Frontend.Models.domain;
    using Frontend.Shared;
    using Newtonsoft.Json;
    using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
    using System.Net;
    using System.IO;
    using Newtonsoft.Json.Linq;
    using Microsoft.AspNetCore.Http;
    using System.Diagnostics;
    using System.Text;
    using System.Net.Http.Headers;
    using Microsoft.AspNetCore.Blazor.RenderTree;
    using Google.Apis.Auth.OAuth2;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/movie/{Title}")]
    public class detail : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 123 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\detail.cshtml"
           
    [Parameter]
    private string Title { get; set; }
    private Movie movie;
    private List<Comment> comments;
    private string username;
    private Comment comment;
    private string text;
    private string rating;

    protected override async Task OnInitAsync()
    {
        Debug.WriteLine(Title);
        movie = await Http.GetJsonAsync<Movie>("http://www.omdbapi.com/?t=" + Title + "&apikey=1342bb");
        var response = await Http.GetAsync("http://localhost:5000/api/Comments/GetCommentsByM/" + movie.Title);
        var str = await response.Content.ReadAsStringAsync();
        if (str != null)
        {
            comments = Json.Deserialize<List<Comment>>(str);
        }
        username = await localStorage.GetItem<string>("username");
    }

    public async Task AddComment()
    {
        comment = new Comment()
        {
            username = username,
            movieName = movie.Title,
            text = text,
            rating = double.Parse(rating)
        };
        await Http.PostJsonAsync("http://localhost:5000/api/Comments/AddComment", comment);
        UriHelper.NavigateTo("/");
        UriHelper.NavigateTo("/movie/"+movie.Title);
    }

    protected void CallJSMethod()
    {
        JSRuntime.Current.InvokeAsync<bool>("JSMethod");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Blazored.Storage.ILocalStorage localStorage { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

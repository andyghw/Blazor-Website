#pragma checksum "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\myComments.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e6e3e648a581f1ca5fcf6013a5854207071dc6eb"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Frontend.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using Frontend;
    using Frontend.Models.domain;
    using Frontend.Shared;
    using Newtonsoft.Json;
    using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
    using System.Net;
    using System.IO;
    using Newtonsoft.Json.Linq;
    using Microsoft.AspNetCore.Http;
    using System.Diagnostics;
    using System.Text;
    using System.Net.Http.Headers;
    using Microsoft.AspNetCore.Blazor.RenderTree;
    using Google.Apis.Auth.OAuth2;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/comments")]
    public class myComments : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 36 "D:\Study\GuoHanwen\Master\Info6250\FinalProject\Frontend\Pages\myComments.cshtml"
           
    private List<Comment> comments;

    protected override async Task OnInitAsync()
    {
        var username = await localStorage.GetItem<string>("username");
        var response = await Http.GetAsync("http://localhost:5000/api/Comments/GetCommentsByV/" + username);
        var str = await response.Content.ReadAsStringAsync();
        if (str != null)
        {
            comments = Json.Deserialize<List<Comment>>(str);
        }
    }

    public async Task DeleteComment(int id)
    {
        await Http.DeleteAsync("http://localhost:5000/api/Comments/DeleteComment/" + id);
        UriHelper.NavigateTo("/");
        UriHelper.NavigateTo("/comments");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Blazored.Storage.ILocalStorage localStorage { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
